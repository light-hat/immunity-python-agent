name: Release agent

on:
  workflow_dispatch:

jobs:

  wheels:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] #, windows-latest, macos-latest]

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        
      - name: Set up QEMU (for Linux emulation)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.0
        env:
          CIBW_ARCHS: auto
          CIBW_BUILD: cp36-*, cp37-*, cp38-*, cp39-*, cp310-*, cp311-*, cp312-*

      - uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: wheelhouse/*.whl

  # publish:
  #   name: Publish package to PyPI
  #   runs-on: ubuntu-latest
  #   needs: [ linux ] #, windows ]
  #   environment: pypi
  #   permissions:
  #     id-token: write

  #   steps:
  #     - name: Download all wheel artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: dist/
  #         merge-multiple: true

  #     - name: List files for debugging
  #       run: ls -la dist/

  #     - name: Upload to PyPI
  #       env:
  #         TWINE_USERNAME: ${{ secrets.USR }}
  #         TWINE_PASSWORD: ${{ secrets.PWD }}
  #       run: |
  #         pip install --upgrade setuptools wheel twine build
  #         python3 -m twine upload dist/*
